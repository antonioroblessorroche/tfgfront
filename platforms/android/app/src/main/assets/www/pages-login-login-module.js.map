{"version":3,"sources":["./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.scss","./src/app/pages/login/login.page.html","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.page.ts","./src/app/models/login-usuario.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AAEA;AAEmB;AAEvB;AAC+B;IAY3D,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAV3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4EAAsB;YACtB,qFAAgB;SACjB;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;ACrB5B;AAAe,6GAA8C,mHAAmH,E;;;;;;;;;;;;ACAhL;AAAe,80EAA+wE,E;;;;;;;;;;;;;;;;;;;ACArvE;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBe;AACT;AACyB;AACN;AACA;AACA;AACE;IAOjD,SAAS,SAAT,SAAS;IASpB,YACU,WAAwB,EACxB,YAA0B,EAC1B,eAAgC,EAChC,eAAgC,EAChC,MAAa;QAJb,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAO;QAXvB,kBAAa,GAAG,EAAE,CAAC;QACnB,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAG,yBAAyB,CAAC;QAEpC,aAAQ,GAAG,KAAK,CAAC;IAQb,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,YAAY,GAAG,IAAI,yEAAY,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACjD,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,oCAAoC;YACpC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CACF;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,kBAAkB,EAAE;IAC3B,CAAC;IAEK,kBAAkB;;YACtB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,sBAAsB;gBAC9B,OAAO,EAAE,8DAA8D;gBACvE,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,MAAM;wBACZ,IAAI,EAAE,OAAO;wBACb,WAAW,EAAE,oBAAoB;qBAClC;iBACF;gBACD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,UAAU;wBAChB,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,WAAW;wBACrB,OAAO,EAAE,GAAG,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;wBAChC,CAAC;qBACF,EAAE;wBACD,IAAI,EAAE,WAAW;wBACjB,OAAO,EAAE,CAAC,SAAS,EAAE,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBACnC,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,OAAO,GAAG,IAAI,yEAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC,CACF;IACH,CAAC;IAEK,eAAe,CAAC,GAAW;;YAC/B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO,EAAE,GAAG;gBACZ,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;IAEK,YAAY;;YAChB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;IAED,MAAM;QACJ,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC;IACvD,CAAC;CAEF;;YAnIQ,yEAAW;YACX,2EAAY;YAJK,8DAAe;YAAhC,8DAAe;YADf,sDAAM;;AAYF,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,6EAAgC;;KAEjC,CAAC;GACW,SAAS,CA2HrB;AA3HqB;;;;;;;;;;;;;ACbtB;AAAA;AAAO,MAAM,YAAY;IAKrB,YAAY,aAAqB,EAAE,QAAgB;QAC/C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;CACJ","file":"pages-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MifQ== */\";","export default \"<app-header title=\\\"Login\\\"></app-header>\\n\\n<ion-content *ngIf=\\\"!isLogged\\\">\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin()\\\" novalidate>\\n        <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin\\\">\\n            <ion-list-header lines=\\\"full\\\">\\n              <ion-label>\\n               Inicio de sesión\\n              </ion-label>\\n            </ion-list-header>\\n            <ion-item>\\n              <ion-label>Usuario: <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required placeholder=\\\"Nombre de usuario\\\" name=\\\"nombreUsuario\\\" [(ngModel)]=\\\"nombreUsuario\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label>Password: <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n                <ion-input required type=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Contraseña\\\" name=\\\"description\\\"></ion-input>\\n              </ion-item>\\n            <div class=\\\"ion-padding\\\">\\n                <ion-button color=\\\"success\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" [disabled]=\\\"!f.valid\\\"> \\n                    <ion-icon name=\\\"log-in\\\">  </ion-icon>\\n                    Acceder\\n                     </ion-button>\\n             </div>\\n          </ion-list>\\n         \\n    </form>\\n\\n    <div class=\\\"ion-text-center\\\">\\n        <ion-label position=\\\"floating\\\" (click)=\\\"presentRetrievePass()\\\">\\n         ¿Olvidaste la contraseña?\\n        </ion-label>\\n    </div>\\n    <ion-item-divider>\\n    </ion-item-divider>\\n\\n    <!-- <div class=\\\"ion-text-center ion-padding ion-marging-top\\\">\\n        <h4>¿No tienes cuenta?</h4>\\n        <ion-button color=\\\"tertiary\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" routerLink=\\\"/register\\\"> \\n            <ion-icon name=\\\"person-add\\\">  </ion-icon>\\n            Crear cuenta\\n         </ion-button>\\n    </div> -->\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"isLogged\\\">\\n  <div class=\\\"ion-text-center ion-margin-top ion-padding\\\">\\n    <ion-text color=\\\"primary\\\"><h2>Sesion ya iniciada</h2></ion-text>\\n      <ion-divider></ion-divider>\\n      <ion-button color=\\\"tertiary\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"logOut()\\\"> \\n        <ion-icon name=\\\"log-out\\\">  </ion-icon>\\n        Cerrar sesion\\n     </ion-button>\\n   </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { LoginUsuario } from 'src/app/models/login-usuario';\nimport { NuevoUsuario } from 'src/app/models/nuevo-usuario';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loginUsuario: LoginUsuario;\n  nombreUsuario = '';\n  password = '';\n  errMesg = 'Error al iniciar sesión';\n\n  isLogged = false;\n\n  constructor(\n    private authService: AuthService,\n    private tokenService: TokenService,\n    private toastController: ToastController,\n    private alertController: AlertController,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.testLogged();\n  }\n\n  ionViewWillEnter() {\n    this.testLogged();\n    this.vaciar();\n  }\n\n  vaciar() {\n    this.nombreUsuario = '';\n    this.password = '';\n  }\n\n  onLogin() {\n    this.loginUsuario = new LoginUsuario(this.nombreUsuario, this.password);\n    this.authService.login(this.loginUsuario).subscribe(\n      data => {\n        this.tokenService.setToken(data.token);\n        this.tokenService.setUsername(data.nombreUsuario);\n        this.tokenService.setAuthorities(data.authorities);\n        this.isLogged = true;\n        this.router.navigate(['/']);\n      },\n      err => {\n        // this.errMesg = err.error.message;\n        this.presentToast();\n      }\n    )\n  }\n\n  presentRetrievePass() {\n    this.presentAlertPrompt()\n  }\n\n  async presentAlertPrompt() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Recuperar contraseña',\n      message: 'Se le enviará un correo electrónico con la nueva contraseña.',\n      inputs: [\n        {\n          name: 'mail',\n          type: 'email',\n          placeholder: 'Correo electrónico'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Confirmar',\n          handler: (alertData) => {\n            this.sendNewPass(alertData.mail);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  sendNewPass(mail: string) {\n    let userVar = new NuevoUsuario(null, null, mail, null);\n    this.authService.newPass(userVar).subscribe(\n      data => {\n        console.log(data.mensaje);\n        this.presentToastMsg(data.mensaje);\n      },\n      err => {\n        console.log(err);\n        this.presentToastMsg(err.mensaje);\n      }\n    )\n  }\n\n  async presentToastMsg(msg: string) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: this.errMesg,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  logOut(): void {\n    this.tokenService.logOut();\n    this.isLogged = false;\n  }\n  \n  testLogged(): void {\n    this.isLogged = this.tokenService.getToken() != null;\n  }\n\n}\n","export class LoginUsuario {\n\n    nombreUsuario: string;\n    password: string;\n\n    constructor(nombreUsuario: string, password: string) {\n        this.nombreUsuario = nombreUsuario;\n        this.password = password;\n    }\n}\n"],"sourceRoot":"webpack:///"}