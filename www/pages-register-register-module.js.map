{"version":3,"sources":["./src/app/pages/register/register-routing.module.ts","./src/app/pages/register/register.page.html","./src/app/pages/register/register.page.scss","./src/app/pages/register/register.module.ts","./src/app/pages/register/register.page.ts"],"names":[],"mappings":"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","file":"pages-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","export default \"<app-header title=\\\"Registro\\\"></app-header>\\n\\n<ion-content>\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onRegister()\\\" novalidate>\\n        <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin\\\">\\n            <ion-list-header lines=\\\"full\\\">\\n              <ion-label>\\n                Registrate\\n              </ion-label>\\n            </ion-list-header>\\n            <ion-item>\\n              <ion-label>Nombre: <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input required placeholder=\\\"Nombre completo\\\" name=\\\"nombre\\\" [(ngModel)]=\\\"nombre\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label>Email: <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n                <ion-input required type=\\\"email\\\" placeholder=\\\"Correo electrónico\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" email></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label>Usuario: <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n                <ion-input required placeholder=\\\"Nombre de usuario\\\" name=\\\"nombreUsuario\\\" [(ngModel)]=\\\"nombreUsuario\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                  <ion-label>Password: <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n                  <ion-input required type=\\\"password\\\" placeholder=\\\"Contraseña\\\" name=\\\"description\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n                </ion-item>\\n            <div class=\\\"ion-padding\\\">\\n                <ion-button color=\\\"success\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" [disabled]=\\\"!f.valid\\\"> \\n                    <ion-icon name=\\\"person-add\\\">  </ion-icon>\\n                    Registrarse\\n                     </ion-button>\\n             </div>\\n             \\n          </ion-list>\\n         \\n    </form>\\n\\n    <div class=\\\"ion-text-center\\\">\\n        <ion-label position=\\\"floating\\\">\\n            <ion-text color=\\\"danger\\\">\\n                *\\n            </ion-text> Campos obligatorios\\n        </ion-label>\\n    </div>\\n    <ion-item-divider>\\n    </ion-item-divider>\\n\\n    <div class=\\\"ion-text-center ion-padding ion-marging-top\\\">\\n        <h4>¿Ya estás registrado?</h4>\\n        <ion-button color=\\\"tertiary\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" routerLink=\\\"/login\\\"> \\n            <ion-icon name=\\\"log-in\\\">  </ion-icon>\\n            Accede con tu cuenta\\n         </ion-button>\\n    </div>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { NuevoUsuario } from 'src/app/models/nuevo-usuario';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  nuevoUsuario: NuevoUsuario;\n  nombre = '';\n  email = '';\n  nombreUsuario = '';\n  password = '';\n  errMesg = 'Error al crear usuario';\n  okMsg = 'Usuario creado correctamente';\n\n  isLogged = false;\n\n  constructor(\n    private authService: AuthService,\n    private tokenService: TokenService,\n    private toastController: ToastController,\n    private router:Router) { }\n\n    ngOnInit() {\n      this.testLogged();\n    }\n  \n    ionViewWillEnter() {\n      this.testLogged();\n      this.vaciar();\n    }\n\n  onRegister() {\n    this.nuevoUsuario = new NuevoUsuario(this.nombre, this.nombreUsuario, this.email, this.password);\n    this.authService.registro(this.nuevoUsuario).subscribe(\n      data => {\n        this.presentToast(this.okMsg);\n        this.vaciar();\n        this.router.navigate(['/login']);\n      },\n      err => {\n        this.presentToast(this.errMesg);\n      }\n    )\n  \n  }\n\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  vaciar() {\n    this.nombre = '';\n    this.email = '';\n    this.nombreUsuario = '';\n    this.password = '';\n  }\n\n  logOut(): void {\n    this.tokenService.logOut();\n    this.isLogged = false;\n  }\n  \n  testLogged(): void {\n    this.isLogged = this.tokenService.getToken() != null;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}