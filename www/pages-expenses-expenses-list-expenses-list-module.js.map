{"version":3,"sources":["./src/app/pages/expenses/expenses-list/expenses-list.page.ts","./src/app/pages/expenses/expenses-list/expenses-list.module.ts","./src/app/pages/expenses/expenses-list/expenses-list.page.scss","./src/app/pages/expenses/expenses-list/expenses-list.page.html","./src/app/pages/expenses/expenses-list/expenses-list-routing.module.ts"],"names":[],"mappings":"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","file":"pages-expenses-expenses-list-expenses-list-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, ModalController, ToastController } from '@ionic/angular';\nimport { Expense } from 'src/app/models/expense';\nimport { ExpenseSummary } from 'src/app/models/ExpensesSummary';\nimport { Fare } from 'src/app/models/fare';\nimport { ReducedUser } from 'src/app/models/reducedUser';\nimport { ExpenseService } from 'src/app/services/expenses.service';\nimport { FareService } from 'src/app/services/fare.service';\nimport { TokenService } from 'src/app/services/token.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-expenses-list',\n  templateUrl: './expenses-list.page.html',\n  styleUrls: ['./expenses-list.page.scss'],\n})\nexport class ExpensesListPage implements OnInit {\n\n// @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\n\nprofile: ReducedUser;\nfares: Fare[] = [];\n\nexpenses: Expense[] = [];\nincomes: Expense[] = [];\nsummary: ExpenseSummary;\nbalance: number  =0;\ntotalIncomes: number = 0;\ntotalExpenses: number = 0;\nhasData: boolean = false;\n\n\n//MOCKED DATA\n\n\n\nuser : string = \"\";\npage: 0;\n\nselector = \"profile\";\nselectedYear: number = 0;\nselectedMonth: number;\n\nconstructor(\n  private expenseService: ExpenseService,\n  private fareService: FareService,\n  private router: Router,\n  private activatedRoute: ActivatedRoute,\n  private toastController: ToastController,\n  private alertController: AlertController,\n  private tokenService: TokenService,\n  private modalController: ModalController\n) { }\n\nngOnInit() {\n  console.log(this.incomes);\n  console.log(this.incomes);\n}\n\nionViewWillEnter() {\n  // this.cargar();\n  // this.cargarFares();\n}\n\n// cargarFares() {\n//   this.fareService.lista(100).subscribe(data => {\n//     this.fares = data.content;\n//   }, err => {\n//     console.log(err);\n//     this.presentToast('Error cargando tarifas');\n//   });\n// }\n\n// selectFareId(event) {\n//   this.profile.fareId = event.value.id;\n//  }\n\nsegmentChanged($event) {\n  this.selector = $event.detail.value;\n  console.log($event.detail.value);\n}\n\nselectYear(event) {\n  this.selectedYear = event.detail.value.substring(0,4);\n}\n\nselectMonth(event) {\n  this.selectedMonth = event.detail.value.substring(5,7);\n}\n\nbuscar() {\n  this.totalExpenses = 0;\n  this.totalIncomes = 0;\n  this.balance = 0;\n  this.hasData = false;\n  if (this.selectedYear == 0) {\n    this.selectedYear = new Date().getFullYear();\n  } else {\n    if (this.selectedMonth == 0) {\n      this.selectedMonth = new Date().getMonth() +1;\n    }\n  }\n\n  if (this.selectedMonth == null || this.selectMonth == undefined) {\n      this.expenseService.gastosPorAnno(100, this.selectedYear).subscribe(\n        data => {\n          this.expenses = data.content;\n          if (this.expenses.length > 0) {\n            for (let i=0; i< this.expenses.length; i++) {\n              this.totalExpenses+=this.expenses[i].amount;\n            }\n            this.balance-=this.totalExpenses;\n            this.hasData = true;\n          }\n        }\n      );\n      this.expenseService.ingresosPorAnno(100, this.selectedYear).subscribe(\n        data => {\n          this.incomes = data.content;\n          if (this.incomes.length > 0) {\n            for (let i=0; i< this.incomes.length; i++) {\n              this.totalIncomes+=this.incomes[i].amount;\n            }\n            this.balance+=this.totalIncomes;\n            this.hasData = true;\n          }\n        }\n      );\n      this.expenseService.expensesPerYear(this.selectedYear).subscribe(\n        data => {\n          this.summary = data;\n          this.balance+=parseFloat(this.summary.totalPaidUsers);\n        }\n      );\n  } else {\n    this.expenseService.gastosPorAnnoYMes(100, this.selectedYear, this.selectedMonth).subscribe(\n      data => {\n        this.expenses = data.content;\n        if (this.expenses.length > 0) {\n          for (let i=0; i< this.expenses.length; i++) {\n            this.totalExpenses+=this.expenses[i].amount;\n          }\n          this.balance-=this.totalExpenses;\n          this.hasData = true;\n\n        }\n      }\n    );\n    this.expenseService.ingresosPorAnnoYMes(100, this.selectedYear, this.selectedMonth).subscribe(\n      data => {\n        this.incomes = data.content;\n        if (this.incomes.length > 0) {\n          for (let i=0; i< this.incomes.length; i++) {\n            this.totalIncomes+=this.incomes[i].amount;\n          }\n          this.balance+=this.totalIncomes;\n          this.hasData = true;\n        }\n      }\n    );\n    this.expenseService.expensesPerYearAndMonth(this.selectedYear, this.selectedMonth).subscribe(\n      data => {\n        this.summary = data;\n        this.balance+=parseFloat(this.summary.totalPaidUsers);\n      }\n    );\n  }\n  // this.balance = this.totalIncomes - this.totalExpenses;\n\n}\n\n\n\n// cargar(): void {\n//   const id = this.activatedRoute.snapshot.params.id;\n//   // if (this.tokenService.getAuthorities().length > 1) {\n//     this.expenseService.(id).subscribe(\n//       data => {\n//         this.profile = data;\n//       },\n//       err => {\n//         console.log(\"petó\");\n//         console.log(err);\n//       }\n//     );\n\n  // }\n  //  else {\n  //   this.user = this.tokenService.getUsername();\n  //   this.profileService.findByUser(this.user).subscribe(\n  //     data => {\n  //       this.profiles = data.content;\n  //       console.log(this.profiles);\n  //     },\n  //     err => {\n  //       console.log(\"petó\");\n  //       console.log(err);\n  //     }\n  //   );\n  // }\n\n// }\n\n\n// async presentToast(mensaje: string) {\n//   const toast = await this.toastController.create({\n//     message: mensaje,\n//     duration: 2000,\n//     position: 'middle'\n//   });\n//   toast.present();\n// }\n\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExpensesListPageRoutingModule } from './expenses-list-routing.module';\n\nimport { ExpensesListPage } from './expenses-list.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ExpensesListPageRoutingModule,\n    ComponentsModule,\n    IonicSelectableModule\n  ],\n  declarations: [ExpensesListPage]\n})\nexport class ExpensesListPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlbnNlcy1saXN0LnBhZ2Uuc2NzcyJ9 */\";","export default \"<app-header title=\\\"Gestion de gastos e Ingresos\\\"></app-header>\\n\\n\\n <ion-content>\\n    <ion-row>\\n    <ion-col col-6>\\n        <ion-item>\\n          <ion-label>Año</ion-label>\\n          <ion-datetime displayFormat=\\\"YYYY\\\" (ionChange)=\\\"selectYear($event)\\\"></ion-datetime>\\n        </ion-item>\\n    </ion-col>\\n    \\n    <ion-col col-6>\\n      <ion-item>\\n        <ion-label>Mes</ion-label>\\n        <ion-datetime displayFormat=\\\"MMM\\\" (ionChange)=\\\"selectMonth($event)\\\" [disabled]=\\\"!selectedYear || selectedYear == 0\\\"></ion-datetime>\\n      </ion-item>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col col-6>\\n      <ion-button (click)=\\\"buscar()\\\" expand=\\\"block\\\">\\n        <ion-icon name=\\\"search\\\"></ion-icon>\\n        Buscar    \\n      </ion-button>\\n  </ion-col>\\n  \\n  <ion-col col-6>\\n    <ion-button routerLink=\\\"/new-expense\\\" color=\\\"success\\\" expand=\\\"block\\\">\\n      <ion-icon name=\\\"add\\\" ></ion-icon>\\n        Crear    \\n      </ion-button>\\n  </ion-col>\\n  </ion-row>\\n\\n\\n\\n\\n  <ion-content>\\n    <ion-item>\\n        <ion-col col-12>\\n          <ion-segment (ionChange)=\\\"segmentChanged($event)\\\">\\n            <ion-segment-button value=\\\"profile\\\">\\n              <ion-label>Gastos</ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button value=\\\"payments\\\">\\n              <ion-label>Ingresos</ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button value=\\\"comments\\\">\\n              <ion-label>Resumen</ion-label>\\n            </ion-segment-button>\\n          </ion-segment>\\n        </ion-col>\\n        <!-- <ion-col col-3>\\n                  <ion-button expand=\\\"block\\\" color=\\\"success\\\">\\n                      <ion-label>Actualizar</ion-label>\\n                  </ion-button>\\n          </ion-col> -->\\n    </ion-item>\\n    <ion-content *ngIf=\\\"selector == 'profile'\\\">\\n      <ion-content *ngIf=\\\"expenses.length == 0\\\" style=\\\"margin: 10%\\\">\\n        <ion-item>\\n          <ion-label class=\\\"ion-text-wrap\\\" align=\\\"center\\\" style=\\\"margin: 10%\\\">No existen gastos para los filtros seleccionados</ion-label>\\n        </ion-item>\\n      </ion-content>\\n\\n      <ion-content *ngIf=\\\"expenses\\\">\\n        <ion-list *ngFor=\\\"let expense of expenses\\\">\\n          <ion-item-sliding>\\n              <ion-item-options side=\\\"start\\\" > \\n                 <ion-item-option routerLink=\\\"/detail-expense/{{expense.id}}\\\"> \\n                   <ion-icon name=\\\"eye\\\" slot=\\\"icon-only\\\"> \\n                  </ion-icon>  \\n                 </ion-item-option>\\n              </ion-item-options> \\n          \\n              <ion-item>\\n                <ion-label>{{expense.name}} ({{expense.amount}}€)</ion-label>\\n              </ion-item>\\n          \\n              <ion-item-options side=\\\"end\\\">\\n                  <ion-item-option color=\\\"danger\\\" (click)=\\\"deleteConfirm(center.id)\\\">\\n                      <ion-icon name=\\\"trash\\\" slot=\\\"icon-only\\\" >\\n                      </ion-icon>  \\n                  </ion-item-option>\\n              </ion-item-options>\\n          </ion-item-sliding>\\n      </ion-list>\\n      </ion-content>\\n\\n\\n    </ion-content>\\n\\n\\n    <ion-content *ngIf=\\\"selector == 'payments'\\\">\\n      <ion-content *ngIf=\\\"incomes.length == 0\\\" style=\\\"margin: 10%\\\">\\n        <ion-item>\\n          <ion-label class=\\\"ion-text-wrap\\\" align=\\\"center\\\" style=\\\"margin: 10%\\\">No existen ingresos para los filtros seleccionados</ion-label>\\n        </ion-item>\\n      </ion-content>\\n\\n      <ion-content *ngIf=\\\"incomes\\\">\\n        <ion-list *ngFor=\\\"let income of incomes\\\">\\n          <ion-item-sliding>\\n              <ion-item-options side=\\\"start\\\" > \\n                 <ion-item-option routerLink=\\\"/detail-expense/{{income.id}}\\\"> \\n                   <ion-icon name=\\\"eye\\\" slot=\\\"icon-only\\\"> \\n                  </ion-icon>  \\n                 </ion-item-option>\\n              </ion-item-options> \\n          \\n              <ion-item>\\n                <ion-label>{{income.name}} ({{income.amount}}€)</ion-label>\\n              </ion-item>\\n          \\n              <ion-item-options side=\\\"end\\\">\\n                  <ion-item-option color=\\\"danger\\\" (click)=\\\"deleteConfirm(center.id)\\\">\\n                      <ion-icon name=\\\"trash\\\" slot=\\\"icon-only\\\" >\\n                      </ion-icon>  \\n                  </ion-item-option>\\n              </ion-item-options>\\n          </ion-item-sliding>\\n      </ion-list>\\n      </ion-content>\\n\\n    </ion-content>\\n\\n\\n\\n\\n    <ion-content *ngIf=\\\"selector == 'comments'\\\">\\n      <ion-content *ngIf=\\\"!hasData\\\" style=\\\"margin: 10%\\\">\\n        <ion-item>\\n          <ion-label class=\\\"ion-text-wrap\\\" align=\\\"center\\\" style=\\\"margin: 10%\\\">No existen gastos ni ingresos para los filtros</ion-label>\\n        </ion-item>\\n      </ion-content>\\n      <ion-content *ngIf=\\\"summary\\\" style=\\\"margin: 10%\\\">\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Balance</ion-label>\\n          <ion-label>{{balance}}</ion-label>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Total gastos</ion-label>\\n          <ion-label>{{totalExpenses}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label  position=\\\"stacked\\\">Total ingresos</ion-label>\\n          <ion-label>{{totalIncomes}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Usuarios activos</ion-label>\\n          <ion-label>{{summary.numberOfActiveUsers}}</ion-label>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Total pagos usuario</ion-label>\\n          <ion-label>{{summary.totalPaidUsers}}</ion-label>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"summary.remainingUnpaidUsers != '-'\\\">\\n          <ion-label position=\\\"stacked\\\">Nº usuarios pendientes de pago</ion-label>\\n          <ion-label>{{summary.remainingUnpaidUsers}}</ion-label>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"summary.remainingAmountUsers != '-'\\\">\\n          <ion-label position=\\\"stacked\\\">Cantidad pendiente de pago</ion-label>\\n          <ion-label>{{summary.remainingAmountUsers}}</ion-label>\\n        </ion-item>\\n\\n        <ion-item *ngIf=\\\"summary.totalExpectedUsers != '-'\\\">\\n          <ion-label position=\\\"stacked\\\">Total esperado usuarios</ion-label>\\n          <ion-label>{{summary.totalExpectedUsers}}</ion-label>\\n        </ion-item>\\n      </ion-content>\\n    </ion-content>\\n\\n       \\n  </ion-content>  \\n\\n\\n  \\n</ion-content>  \\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExpensesListPage } from './expenses-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExpensesListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExpensesListPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}